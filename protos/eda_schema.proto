syntax = "proto3";

package edaschema;

message Empty {}

// Edge Entity
message EdgeEntity {
    string source = 1; // ID of the source node
    string target = 2; // ID of the target node
}

// Standard Cell Entity
message StandardCellEntity {
    string name = 1;
    float width = 2;
    float height = 3;
    int32 no_of_input_pins = 4;
    int32 no_of_output_pins = 5;
    bool is_sequential = 6;
    bool is_inverter = 7;
    bool is_buffer = 8;
    float drive_strength = 9;
    float input_capacitance_min = 10;
    float input_capacitance_max = 11;
    float output_capacitance_min = 12;
    float output_capacitance_max = 13;
    float leakage_power_min = 14;
    float leakage_power_max = 15;
}

// Gate Entity
message GateEntity {
    string name = 1;
    StandardCellEntity standard_cell = 2;
    int32 no_of_fanins = 3;
    int32 no_of_fanouts = 4;
    float x = 5;
    float y = 6;
}

// IO Port Entity
message IOPortEntity {
    string name = 1;
    string direction = 2;
    float x = 3;
    float y = 4;
    float capacitance = 5;
}

// Interconnect Segment Entity
message InterconnectSegmentEntity {
    string name = 1;
    float length = 2;
    float x1 = 3;
    float y1 = 4;
    float x2 = 5;
    float y2 = 6;
    float midpoint_x = 7;
    float midpoint_y = 8;
    float rudy = 9;
    float resistance = 10;
    float capacitance = 11;
}

// Interconnect Graph Entity
message InterconnectGraphEntity {
    string name = 1;
    int32 no_of_inputs = 2;
    int32 no_of_outputs = 3;
    float x_min = 4;
    float y_min = 5;
    float x_max = 6;
    float y_max = 7;
    float length = 8;
    float hpwl = 9;
    float rudy = 10;
    float resistance = 11;
    float capacitance = 12;
    repeated InterconnectSegmentEntity interconnect_segments = 13;
    repeated EdgeEntity edges = 14;
}

// Timing Path Node Entity
message TimingPathNodeEntity {
    string name = 1;
    string gate = 2;
    string standard_cell = 3;
    string pin = 4;
    float cell_delay = 5;
    float arrival_time = 6;
    float slew = 7;
    bool is_rise_transition = 8;
    bool is_fall_transition = 9;
    int32 node_depth = 10;
}

// Timing Path Graph Entity
message TimingPathGraphEntity {
    string startpoint = 1;
    string endpoint = 2;
    string path_type = 3;
    float arrival_time = 4;
    float required_time = 5;
    float slack = 6;
    int32 no_of_gates = 7;
    bool is_critical_path = 8;

    repeated TimingPathNodeEntity timing_nodes = 9;
    repeated EdgeEntity edges = 10;
}

// Cell Metrics Entity
message CellMetricsEntity {
    int32 no_of_combinational_cells = 1;
    int32 no_of_sequential_cells = 2;
    int32 no_of_buffers = 3;
    int32 no_of_inverters = 4;
    int32 no_of_fillers = 5;
    int32 no_of_tap_cells = 6;
    int32 no_of_diodes = 7;
    int32 no_of_macros = 8;
    int32 no_of_total_cells = 9;
}

// Area Metrics Entity
message AreaMetricsEntity {
    float combinational_cell_area = 1;
    float sequential_cell_area = 2;
    float buffer_area = 3;
    float inverter_area = 4;
    float filler_area = 5;
    float tap_cell_area = 6;
    float diode_area = 7;
    float macro_area = 8;
    float cell_area = 9;
    float total_area = 10;
}

// Power Metrics Entity
message PowerMetricsEntity {
    float combinational_power = 1;
    float sequential_power = 2;
    float macro_power = 3;
    float internal_power = 4;
    float switching_power = 5;
    float leakage_power = 6;
    float total_power = 7;
}

// Critical Path Metrics Entity
message CriticalPathMetricsEntity {
    string startpoint = 1;
    string endpoint = 2;
    float worst_arrival_time = 3;
    float worst_slack = 4;
    float total_negative_slack = 5;
    int32 no_of_timing_paths = 6;
    int32 no_of_slack_violations = 7;
}

// Clock Tree Entity
message ClockTreeEntity {
    string clock_source = 1;
    int32 no_of_buffers = 2;
    int32 no_of_clock_sinks = 3;

    repeated IOPortEntity io_ports = 4;
    repeated GateEntity gates = 5;
    repeated InterconnectGraphEntity interconnects = 6;
    repeated EdgeEntity edges = 7;
}

// Netlist Graph Entity
message NetlistGraphEntity {
    float width = 1;
    float height = 2;
    int32 no_of_inputs = 3;
    int32 no_of_outputs = 4;
    float utilization = 5;
    float cell_density = 6;
    float pin_density = 7;
    float net_density = 8;

    CellMetricsEntity cell_metrics = 9;
    AreaMetricsEntity area_metrics = 10;
    PowerMetricsEntity power_metrics = 11;
    CriticalPathMetricsEntity critical_path_metrics = 12;

    repeated TimingPathEntity timing_paths = 13;
    repeated ClockTreeEntity clock_trees = 14;
    repeated IOPortEntity io_ports = 15;
    repeated GateEntity gates = 16;
    repeated InterconnectGraphEntity interconnects = 17;
    repeated EdgeEntity edges = 18;
}

// EDA-Schema Service
service EdaSchemaService {
    rpc GetNetlistGraph (Empty) returns (NetlistGraphEntity);
    rpc GetCellMetrics (Empty) returns (CellMetricsEntity);
    rpc GetAreaMetrics (Empty) returns (AreaMetricsEntity);
    rpc GetPowerMetrics (Empty) returns (PowerMetricsEntity);
    rpc GetCriticalPathMetrics (Empty) returns (CriticalPathMetricsEntity);
    rpc GetStandardCell (Empty) returns (StandardCellEntity);
    rpc GetGate (Empty) returns (GateEntity);
    rpc GetIOPort (Empty) returns (IOPortEntity);
    rpc GetInterconnectGraph (Empty) returns (InterconnectGraphEntity);
    rpc GetTimingPathGraph (Empty) returns (TimingPathGraphEntity);
}
